'------------------------------------------------------------------------------
' <auto-generated>
'    這個程式碼是由範本產生。
'
'    對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
'    如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq

Partial Public Class NorthwindEntities1
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=NorthwindEntities1")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Property Categories() As DbSet(Of Categories)
    Public Property CustomerDemographics() As DbSet(Of CustomerDemographics)
    Public Property Customers() As DbSet(Of Customers)
    Public Property Employees() As DbSet(Of Employees)
    Public Property Order_Details() As DbSet(Of Order_Details)
    Public Property Orders() As DbSet(Of Orders)
    Public Property Products() As DbSet(Of Products)
    Public Property Region() As DbSet(Of Region)
    Public Property Shippers() As DbSet(Of Shippers)
    Public Property Suppliers() As DbSet(Of Suppliers)
    Public Property Territories() As DbSet(Of Territories)
    Public Property Alphabetical_list_of_products() As DbSet(Of Alphabetical_list_of_products)
    Public Property Category_Sales_for_1997() As DbSet(Of Category_Sales_for_1997)
    Public Property Current_Product_List() As DbSet(Of Current_Product_List)
    Public Property Customer_and_Suppliers_by_City() As DbSet(Of Customer_and_Suppliers_by_City)
    Public Property Invoices() As DbSet(Of Invoices)
    Public Property Order_Details_Extended() As DbSet(Of Order_Details_Extended)
    Public Property Order_Subtotals() As DbSet(Of Order_Subtotals)
    Public Property Orders_Qry() As DbSet(Of Orders_Qry)
    Public Property Product_Sales_for_1997() As DbSet(Of Product_Sales_for_1997)
    Public Property Products_Above_Average_Price() As DbSet(Of Products_Above_Average_Price)
    Public Property Products_by_Category() As DbSet(Of Products_by_Category)
    Public Property Sales_by_Category() As DbSet(Of Sales_by_Category)
    Public Property Sales_Totals_by_Amount() As DbSet(Of Sales_Totals_by_Amount)
    Public Property Summary_of_Sales_by_Quarter() As DbSet(Of Summary_of_Sales_by_Quarter)
    Public Property Summary_of_Sales_by_Year() As DbSet(Of Summary_of_Sales_by_Year)

    Public Overridable Function CustOrderHist(customerID As String) As ObjectResult(Of CustOrderHist_Result)
        Dim customerIDParameter As ObjectParameter = If(customerID IsNot Nothing, New ObjectParameter("CustomerID", customerID), New ObjectParameter("CustomerID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CustOrderHist_Result)("CustOrderHist", customerIDParameter)
    End Function

    Public Overridable Function CustOrdersDetail(orderID As Nullable(Of Integer)) As ObjectResult(Of CustOrdersDetail_Result)
        Dim orderIDParameter As ObjectParameter = If(orderID.HasValue, New ObjectParameter("OrderID", orderID), New ObjectParameter("OrderID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CustOrdersDetail_Result)("CustOrdersDetail", orderIDParameter)
    End Function

    Public Overridable Function CustOrdersOrders(customerID As String) As ObjectResult(Of CustOrdersOrders_Result)
        Dim customerIDParameter As ObjectParameter = If(customerID IsNot Nothing, New ObjectParameter("CustomerID", customerID), New ObjectParameter("CustomerID", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of CustOrdersOrders_Result)("CustOrdersOrders", customerIDParameter)
    End Function

    Public Overridable Function Employee_Sales_by_Country(beginning_Date As Nullable(Of Date), ending_Date As Nullable(Of Date)) As ObjectResult(Of Employee_Sales_by_Country_Result)
        Dim beginning_DateParameter As ObjectParameter = If(beginning_Date.HasValue, New ObjectParameter("Beginning_Date", beginning_Date), New ObjectParameter("Beginning_Date", GetType(Date)))

        Dim ending_DateParameter As ObjectParameter = If(ending_Date.HasValue, New ObjectParameter("Ending_Date", ending_Date), New ObjectParameter("Ending_Date", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Employee_Sales_by_Country_Result)("Employee_Sales_by_Country", beginning_DateParameter, ending_DateParameter)
    End Function

    Public Overridable Function Sales_by_Year(beginning_Date As Nullable(Of Date), ending_Date As Nullable(Of Date)) As ObjectResult(Of Sales_by_Year_Result)
        Dim beginning_DateParameter As ObjectParameter = If(beginning_Date.HasValue, New ObjectParameter("Beginning_Date", beginning_Date), New ObjectParameter("Beginning_Date", GetType(Date)))

        Dim ending_DateParameter As ObjectParameter = If(ending_Date.HasValue, New ObjectParameter("Ending_Date", ending_Date), New ObjectParameter("Ending_Date", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Sales_by_Year_Result)("Sales_by_Year", beginning_DateParameter, ending_DateParameter)
    End Function

    Public Overridable Function SalesByCategory(categoryName As String, ordYear As String) As ObjectResult(Of SalesByCategory_Result)
        Dim categoryNameParameter As ObjectParameter = If(categoryName IsNot Nothing, New ObjectParameter("CategoryName", categoryName), New ObjectParameter("CategoryName", GetType(String)))

        Dim ordYearParameter As ObjectParameter = If(ordYear IsNot Nothing, New ObjectParameter("OrdYear", ordYear), New ObjectParameter("OrdYear", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of SalesByCategory_Result)("SalesByCategory", categoryNameParameter, ordYearParameter)
    End Function

    Public Overridable Function Ten_Most_Expensive_Products() As ObjectResult(Of Ten_Most_Expensive_Products_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Ten_Most_Expensive_Products_Result)("Ten_Most_Expensive_Products")
    End Function

End Class
